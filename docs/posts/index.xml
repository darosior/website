<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Antoine Poinsot</title>
    <link>https://antoinep.com/posts/</link>
    <description>Recent content on Antoine Poinsot</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright> </copyright>
    <lastBuildDate>Thu, 01 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://antoinep.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>On relay policy and recent OP_RETURN drama</title>
      <link>https://antoinep.com/posts/relay_policy_drama/</link>
      <pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>
      <guid>https://antoinep.com/posts/relay_policy_drama/</guid>
      <description>&lt;p&gt;I recently &lt;a href=&#34;https://gnusha.org/pi/bitcoindev/rhfyCHr4RfaEalbfGejVdolYCVWIyf84PT2062DQbs5-eU8BPYty5sGyvI3hKeRZQtVC7rn_ugjUWFnWCymz9e9Chbn7FjWJePllFhZRKYk=@protonmail.com&#34;&gt;emailed&lt;/a&gt; the Bitcoin development mailing list about lifting the restrictions&#xA;on the use of &lt;code&gt;OP_RETURN&lt;/code&gt; outputs in standard transactions. This triggered yet another shitstorm,&#xA;which prompted me to lay down my thoughts on the topic as a blog post to minimize the time wasted&#xA;arguing in parts on Twitter.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-relay-policy-and-why-is-it-necessary&#34;&gt;What is relay policy and why is it necessary?&lt;/h2&gt;&#xA;&lt;p&gt;Policy is extremely broad and refers to all the rules observed by the software when interacting with&#xA;the Bitcoin P2P network. Examples include the organization of requests emitted to peers, delays in&#xA;message processing, refusing to process blocks with a timestamp more than 2 hours in the future&#xA;(compared to the system time), or refusing to process certain types of transactions. The object of&#xA;recent drama is the latter. I will use the nomenclature from my &lt;a href=&#34;https://bitcoin.stackexchange.com/a/120271/101498&#34;&gt;Bitcoin Stackexchange answer&lt;/a&gt; on the topic and refer to the rules dictating the format of transactions in isolation as&#xA;&amp;ldquo;transaction standardness&amp;rdquo;, which is a subset of &amp;ldquo;mempool policy&amp;rdquo;, itself considered a subset of&#xA;&amp;ldquo;transaction relay policy&amp;rdquo;, finally a subset of &amp;ldquo;relay policy&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVE-2025-43707: out-of-bounds read in the Rust-Miniscript satisfier</title>
      <link>https://antoinep.com/posts/cve-2025-43707/</link>
      <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://antoinep.com/posts/cve-2025-43707/</guid>
      <description>&lt;p&gt;On March 25, &lt;a href=&#34;https://github.com/pythcoiner&#34;&gt;@Pythcoiner&lt;/a&gt; from the&#xA;&lt;a href=&#34;https://wizardsardine.com&#34;&gt;Wizardsardine&lt;/a&gt; team contacted me about a crash bug&#xA;in &lt;a href=&#34;https://github.com/wizardsardine/liana&#34;&gt;Liana&lt;/a&gt; they had identified as&#xA;coming from the&#xA;&lt;a href=&#34;https://github.com/rust-bitcoin/rust-miniscript&#34;&gt;&lt;code&gt;rust-miniscript&lt;/code&gt;&lt;/a&gt;&#xA;dependency. After investigating i identified the crash as coming from the&#xA;library&amp;rsquo;s Miniscript satisfier, and found it could be triggered by an attacker.&lt;/p&gt;&#xA;&lt;p&gt;The impact of this vulnerability is that an attacker could make a victim crash by getting them to&#xA;satisfy a transaction spending a specially-crafted descriptor. In simpler terms, a victim could&#xA;crash when &amp;ldquo;signing&amp;rdquo; a transaction that spends from a specific &amp;ldquo;wallet&amp;rdquo;. This is not critical (but&#xA;still pretty annoying!) if you consider the victim as being a software running locally. But these&#xA;are pretty common operations and it would not be surprising that an application running on a server&#xA;publicly exposes them (for instance through &lt;a href=&#34;https://bitcoindevkit.org/adoption/all&#34;&gt;BDK&lt;/a&gt;). There,&#xA;an attacker exploiting this bug could prevent all users from accessing the service.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bitcoin Core scope, concretely</title>
      <link>https://antoinep.com/posts/bitcoin_core_scope/</link>
      <pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://antoinep.com/posts/bitcoin_core_scope/</guid>
      <description>&lt;p&gt;In my last two posts i presented Bitcoin Core&amp;rsquo;s &lt;a href=&#34;https://antoinep.com/posts/core_project_direction&#34;&gt;prioritisation&#xA;issues&lt;/a&gt; and then &lt;a href=&#34;https://antoinep.com/posts/stating_the_obvious&#34;&gt;provided an&#xA;answer&lt;/a&gt; to what the scope and goals of the Bitcoin&#xA;Core project should be. Now what?&lt;/p&gt;&#xA;&lt;p&gt;Well, it&amp;rsquo;s not like we are starting a new project from scratch where we could just begin enforcing&#xA;the scope as we develop it. We are fixing things in flight, with users and developers that depend on&#xA;or care about existing modules that would be out of scope. Although developers working in these&#xA;areas should realize they impose a non-trivial cost on all the other contributors that don&amp;rsquo;t believe&#xA;they should be a priority, just throwing shit at each other is not going to move things forward.&#xA;Engaging with &amp;ldquo;just delete the GUI&amp;rdquo; or &amp;ldquo;just delete the wallet&amp;rdquo; is a non-starter.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stating the obvious</title>
      <link>https://antoinep.com/posts/stating_the_obvious/</link>
      <pubDate>Wed, 05 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://antoinep.com/posts/stating_the_obvious/</guid>
      <description>&lt;p&gt;Following &lt;a href=&#34;https://antoinep.com/posts/core_project_direction&#34;&gt;my post&lt;/a&gt; from a couple weeks ago, i&#xA;set out to answer my own question.&lt;/p&gt;&#xA;&lt;p&gt;How do we define a project scope? An interesting exercise is to consider what should be the bounds if&#xA;we had near infinite resources. Should there be a limit in the scope of the project then? Surely you&#xA;can think of examples of features we&amp;rsquo;d never want to include in Bitcoin Core (for instance a general&#xA;purpose text editor, a browser, a recursive DNS resolver, ..).  But then where do we draw the line?&#xA;It&amp;rsquo;s tempting to say &amp;ldquo;at non-Bitcoin stuff&amp;rdquo;, but this is only begging the question. A message&#xA;encryption feature (or even &lt;code&gt;signmessage&lt;/code&gt; for this matter) can be argued to be Bitcoin-related as&#xA;much as a DNS resolver.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bitcoin Core project direction</title>
      <link>https://antoinep.com/posts/core_project_direction/</link>
      <pubDate>Fri, 24 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://antoinep.com/posts/core_project_direction/</guid>
      <description>&lt;p&gt;What should be the mid to long term goals of the project?&lt;/p&gt;&#xA;&lt;p&gt;This is something i&amp;rsquo;ve been thinking about and discussing with others for a while. I don&amp;rsquo;t quite&#xA;have finished thoughts about this, but i think it&amp;rsquo;s important to discuss. It&amp;rsquo;s also a good time as&#xA;most of us will meet in person soon.&lt;/p&gt;&#xA;&lt;p&gt;A lot of decisions we make now about what features should go in, which should be prioritized, what&#xA;to review, what is valuable to start working on, are dependent on what we expect to happen in the&#xA;future. However, we currently cannot have any expectations about what will or will not happen in the&#xA;future. This significantly hinders our ability to make progress.&lt;/p&gt;</description>
    </item>
    <item>
      <title>On Soft Forks</title>
      <link>https://antoinep.com/posts/softforks/</link>
      <pubDate>Wed, 18 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://antoinep.com/posts/softforks/</guid>
      <description>&lt;p&gt;It appears many have different perspectives on soft forks than i do. Recent events and private&#xA;discussions prompted me to share my thoughts on the topic.&lt;/p&gt;&#xA;&lt;p&gt;Bitcoin&amp;rsquo;s value proposition is to be censorship-resistant money (some like to say &amp;ldquo;decentralised&amp;rdquo;).&#xA;And so far it largely succeeded: 15 years after its inception it&amp;rsquo;s still possible for anyone with&#xA;occasional access to the internet to receive, store and send value globally through the Bitcoin&#xA;network without having to ask anyone for permission. This is remarkable, and it would be a great&#xA;achievement if we can keep it this way for another 15 years. There seems however to be &lt;a href=&#34;https://transactionfee.info/charts/fees-per-day-btc&#34;&gt;little&#xA;demand&lt;/a&gt; for using Bitcoin (at least, as a&#xA;medium of exchange). Or maybe just everybody is using Lightning and channel closures are a thing of&#xA;the past. Some believe many would like to use Bitcoin but are simply unable to, and this seems to be&#xA;one motivation behind the recent soft fork excitement. Another common, presumptuous, explanation is&#xA;that actually a lot of people need Bitcoin, but &lt;em&gt;they don&amp;rsquo;t realise it&lt;/em&gt;. It&amp;rsquo;s necessary for the&#xA;western bitcoiner, well educated in the Bitcoin cult, to come and coinsplain them why they need to&#xA;accept Bitcoin in their heart despite having already made the choice it was not the best option for&#xA;them. We should note however that a low usage of Bitcoin can be viewed as a good thing: the contrary&#xA;may imply large scale economic repression is happening.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
